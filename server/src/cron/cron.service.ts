import { Injectable } from '@nestjs/common';
import { Cron } from '@nestjs/schedule';
import { InjectModel } from '@nestjs/sequelize';
import { Op } from 'sequelize';
import { Class } from 'src/classes/classes.model';
import getCurrentSemester from 'src/helpers/getCurrentSemester';
import { User } from 'src/users/users.model';

@Injectable()
export class CronService {
  constructor(
    @InjectModel(Class) private ClassRepo: typeof Class,
    @InjectModel(User) private UserRepo: typeof User,
  ) {}

  async markCompletedClasses() {
    // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –∏—Ö –¥–∞—Ç—É –Ω–∞—á–∞–ª–∞ —É—á—ë–±—ã
    const users = await this.UserRepo.findAll();

    for (const user of users) {
      const currentSemester = getCurrentSemester(new Date(user.studyStartDate));

      // –ó–∞–≤–µ—Ä—à–∞–µ–º –≤—Å–µ –ø—Ä–µ–¥–º–µ—Ç—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –Ω–∞—á–∞–≤—à–∏–µ—Å—è –≤ –ø—Ä–µ–¥—ã–¥—É—â–∏–µ —Å–µ–º–µ—Å—Ç—Ä—ã –∏ –Ω–µ –∑–∞–≤–µ—Ä—à—ë–Ω–Ω—ã–µ
      await this.ClassRepo.update(
        { completed: true },
        {
          where: {
            userId: user.id,
            semester: { [Op.lt]: currentSemester },
            completed: false,
          },
        },
      );
    }
  }

  @Cron('0 0 1 9 *') // –º–∏–Ω, —á–∞—Å, –¥–µ–Ω—å, –º–µ—Å—è—Ü, –¥–µ–Ω—å–ù–µ–¥–µ–ª–∏
  async handleSeptember() {
    console.log('üìò –ó–∞–ø—É—Å–∫ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –ø—Ä–µ–¥–º–µ—Ç–æ–≤ - 1 —Å–µ–Ω—Ç—è–±—Ä—è');
    await this.markCompletedClasses();
  }

  // –ó–∞–ø—É—Å–∫ 1 —Ñ–µ–≤—Ä–∞–ª—è –≤ 00:00
  @Cron('0 0 1 2 *')
  async handleFebruary() {
    console.log('üìó –ó–∞–ø—É—Å–∫ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –ø—Ä–µ–¥–º–µ—Ç–æ–≤ - 1 —Ñ–µ–≤—Ä–∞–ª—è');
    await this.markCompletedClasses();
  }
}
